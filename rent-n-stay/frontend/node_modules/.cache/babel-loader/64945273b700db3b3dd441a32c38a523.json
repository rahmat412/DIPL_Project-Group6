{"ast":null,"code":"import \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createWebHistory, createRouter } from \"vue-router\"; // layouts\n\nimport Admin1 from \"@/layouts/Admin_v.vue\";\nimport Auth from \"@/layouts/Auth.vue\"; // views for Admin layout\n\nimport Dashboard1 from \"@/views/admin_/Dashboard.vue\";\nimport Settings from \"@/views/admin_/Settings.vue\";\nimport Tables from \"@/views/admin_/Tables.vue\";\nimport Maps from \"@/views/admin_/Maps.vue\"; // views for Auth layout\n\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\"; // views without layouts\n\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\"; //coba\n\nimport Admin from \"@/layouts/Admin.vue\";\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Client from \"@/views/admin/ManageClient.vue\";\nimport Owner from \"@/views/admin/ManageOwner.vue\";\nimport Place from \"@/views/admin/ManagePlace.vue\";\nimport Address from \"@/views/admin/ManageAddress.vue\";\nimport Facility from \"@/views/admin/ManageFacility.vue\";\nimport Order from \"@/views/admin/ManageOrder.vue\"; // routes\n\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/admin1\",\n    redirect: \"/admin1/dashboard\",\n    component: Admin1,\n    children: [{\n      path: \"/admin1/dashboard\",\n      component: Dashboard1\n    }, {\n      path: \"/admin1/settings\",\n      component: Settings\n    }, {\n      path: \"/admin1/tables\",\n      component: Tables\n    }, {\n      path: \"/admin1/maps\",\n      component: Maps\n    }]\n  }, {\n    path: \"/admin\",\n    redirect: \"/admin/dashboard\",\n    component: Admin,\n    children: [{\n      path: \"/admin/dashboard\",\n      component: Dashboard\n    }, {\n      path: \"/admin/client\",\n      component: Client\n    }, {\n      path: \"/admin/owner\",\n      component: Owner\n    }, {\n      path: \"/admin/place\",\n      component: Place\n    }, {\n      path: \"/admin/address\",\n      component: Address\n    }, {\n      path: \"/admin/facility\",\n      component: Facility\n    }, {\n      path: \"/admin/Order\",\n      component: Order\n    }],\n    meta: {\n      requiresAuth: true,\n      roles: \"1\"\n    }\n  }, {\n    path: \"/auth\",\n    redirect: \"/auth/login\",\n    component: Auth,\n    children: [{\n      path: \"/auth/login\",\n      component: Login\n    }, {\n      path: \"/auth/register\",\n      component: Register\n    }]\n  }, {\n    path: \"/landing\",\n    component: Landing,\n    meta: {\n      roles: [1, 2, 3]\n    }\n  }, {\n    path: \"/temp\",\n    component: indexTemp\n  }, {\n    path: \"/profile\",\n    component: Profile,\n    meta: {\n      roles: [1, 2, 3]\n    }\n  }, {\n    path: \"/\",\n    component: Home\n  }]\n}); // import { useSwal } from \"@/plugins/useSwal.js\";\n\nrouter.beforeEach(function (to, from, next) {\n  // const Swal = useSwal();\n  var jwt = localStorage.getItem('jwt');\n\n  if (jwt) {\n    var role = localStorage.getItem('role');\n    var allowedRoles = to.matched.reduce(function (acc, route) {\n      return route.meta.roles && !acc.lenght ? route.meta.roles : acc;\n    }, []);\n\n    if (allowedRoles.includes(role)) {\n      next();\n    } else {\n      var redirectRouteByRole = {\n        1: {\n          component: Admin\n        },\n        2: {\n          component: Profile\n        },\n        3: {\n          component: Profile\n        }\n      };\n      next(redirectRouteByRole[role]);\n    }\n  }\n});\nexport default router;","map":{"version":3,"sources":["D:/Project/temp_rns/frontend/src/routes/routes.js"],"names":["createWebHistory","createRouter","Admin1","Auth","Dashboard1","Settings","Tables","Maps","Login","Register","Landing","Profile","Home","indexTemp","Admin","Dashboard","Client","Owner","Place","Address","Facility","Order","router","history","routes","path","redirect","component","children","meta","requiresAuth","roles","beforeEach","to","from","next","jwt","localStorage","getItem","role","allowedRoles","matched","reduce","acc","route","lenght","includes","redirectRouteByRole"],"mappings":"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","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\n\n// layouts\nimport Admin1 from \"@/layouts/Admin_v.vue\";\nimport Auth from \"@/layouts/Auth.vue\";\n\n// views for Admin layout\nimport Dashboard1 from \"@/views/admin_/Dashboard.vue\";\nimport Settings from \"@/views/admin_/Settings.vue\";\nimport Tables from \"@/views/admin_/Tables.vue\";\nimport Maps from \"@/views/admin_/Maps.vue\";\n\n// views for Auth layout\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\";\n\n// views without layouts\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\n\n//coba\nimport Admin from \"@/layouts/Admin.vue\";\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Client from \"@/views/admin/ManageClient.vue\";\nimport Owner from \"@/views/admin/ManageOwner.vue\";\nimport Place from \"@/views/admin/ManagePlace.vue\";\nimport Address from \"@/views/admin/ManageAddress.vue\";\nimport Facility from \"@/views/admin/ManageFacility.vue\";\nimport Order from \"@/views/admin/ManageOrder.vue\";\n\n// routes\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: [{\n        path: \"/admin1\",\n        redirect: \"/admin1/dashboard\",\n        component: Admin1,\n        children: [{\n                path: \"/admin1/dashboard\",\n                component: Dashboard1,\n            },\n            {\n                path: \"/admin1/settings\",\n                component: Settings,\n            },\n            {\n                path: \"/admin1/tables\",\n                component: Tables,\n            },\n            {\n                path: \"/admin1/maps\",\n                component: Maps,\n            },\n        ],\n    }, {\n        path: \"/admin\",\n        redirect: \"/admin/dashboard\",\n        component: Admin,\n        children: [{\n                path: \"/admin/dashboard\",\n                component: Dashboard,\n            }, {\n                path: \"/admin/client\",\n                component: Client,\n            },\n            {\n                path: \"/admin/owner\",\n                component: Owner,\n            },\n            {\n                path: \"/admin/place\",\n                component: Place,\n            },\n            {\n                path: \"/admin/address\",\n                component: Address,\n            },\n            {\n                path: \"/admin/facility\",\n                component: Facility,\n            },\n            {\n                path: \"/admin/Order\",\n                component: Order,\n            },\n        ],\n        meta: {\n            requiresAuth: true,\n            roles: \"1\",\n        }\n    }, {\n        path: \"/auth\",\n        redirect: \"/auth/login\",\n        component: Auth,\n        children: [{\n                path: \"/auth/login\",\n                component: Login,\n            },\n            {\n                path: \"/auth/register\",\n                component: Register,\n            },\n        ],\n    }, {\n        path: \"/landing\",\n        component: Landing,\n        meta: {\n            roles: [1, 2, 3],\n        }\n    }, {\n        path: \"/temp\",\n        component: indexTemp,\n    }, {\n        path: \"/profile\",\n        component: Profile,\n        meta: {\n            roles: [1, 2, 3],\n        }\n    }, {\n        path: \"/\",\n        component: Home,\n    }]\n});\n\n// import { useSwal } from \"@/plugins/useSwal.js\";\n\nrouter.beforeEach((to, from, next) => {\n    // const Swal = useSwal();\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n        const role = localStorage.getItem('role');\n        const allowedRoles = to.matched.reduce((acc, route) => {\n            return route.meta.roles && !acc.lenght ? route.meta.roles : acc\n        }, [])\n\n        if (allowedRoles.includes(role)) {\n            next()\n        } else {\n            const redirectRouteByRole = {\n                1: { component: Admin },\n                2: { component: Profile },\n                3: { component: Profile },\n            }\n            next(redirectRouteByRole[role])\n        }\n    }\n\n\n})\n\nexport default router;"]},"metadata":{},"sourceType":"module"}