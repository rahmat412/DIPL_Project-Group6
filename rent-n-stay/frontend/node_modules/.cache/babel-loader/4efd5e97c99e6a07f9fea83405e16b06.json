{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/temp_rns/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport useValidate from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nimport { reactive, computed } from 'vue';\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nexport default {\n  setup: function setup() {\n    var state = reactive({\n      id: \"\",\n      placeid: \"\",\n      clientid: \"\",\n      status: \"\",\n      range: {\n        start: \"\",\n        end: \"\"\n      }\n    });\n    var rules = computed(function () {\n      return {\n        range: {\n          start: {\n            required: required\n          },\n          end: {\n            required: required\n          }\n        }\n      };\n    });\n    var v$ = useValidate(rules, state);\n    return {\n      state: state,\n      v$: v$\n    };\n  },\n  data: function data() {\n    return {\n      client: {},\n      place: {}\n    };\n  },\n  props: ['id'],\n  created: function created() {\n    this.getOrder();\n    this.getClient();\n    this.getPlace();\n  },\n  methods: {\n    addOrder: function addOrder() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.v$.$validate();\n\n                if (!_this.v$.$error) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return axios.post(\"http://localhost:5000/order\", {\n                  orderID: Math.random().toString(36).substring(2),\n                  clientID: _this.state.clientid,\n                  placeID: _this.state.placeid,\n                  orderDate: new Date(),\n                  orderCheckIn: _this.state.range.start,\n                  orderCheckOut: _this.state.range.end,\n                  orderStatus: _this.state.status\n                });\n\n              case 6:\n                _this.sAlert(\"success\", \"Yeay..\", \"Adding Order Success\");\n\n                _this.close();\n\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n                _this.sAlert(\"error\", \"Oops..\", \"Adding Order Failed\");\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 10]]);\n      }))();\n    },\n    getClient: function getClient() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"http://localhost:5000/client\");\n\n              case 3:\n                response = _context2.sent;\n                _this2.clients = response.data;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    getPlace: function getPlace() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get('http://localhost:5000/place/' + _this3.id);\n\n              case 3:\n                response = _context3.sent;\n                _this3.places = response.data;\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }))();\n    },\n    sAlert: function sAlert(ico, tit, txt) {\n      Swal.fire({\n        icon: ico,\n        title: tit,\n        text: txt,\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.$router.go();\n    }\n  }\n};","map":{"version":3,"sources":["D:\\Project\\temp_rns\\frontend\\src\\views\\client\\client_submitOrder.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <transition name=\"modal-fade\">\n    <div class=\"modal-backdrop\">\n      <div class=\"modal\">\n        <header class=\"modal-header\">\n            <h6 class=\"text-emerald-500 text-lg font-bold\">\n                Edit Order\n            </h6>\n          <a\n            type=\"button\"\n            class=\"btn-close\"\n            @click=\"close\"\n          >\n            <i class=\"fas fa-times\"></i>\n          </a>\n        </header>\n\n        <section class=\"modal-body\">\n            <form>\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"text-left block uppercase text-emerald-600 text-xs font-bold mb-2 mt-2\"\n                  htmlFor=\"grid-password\"\n                >\n                  ID\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"disabled border-0 px-3 py-3 placeholder-emerald-300 text-emerald-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"ID\"\n                  v-model=\"state.id\"\n                  hidden\n                />\n                <span v-if=\"v$.id.$error\" class=\"text-sm px-2 text-red-500\">{{v$.id.$errors[0].$message}}</span>\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"text-left block uppercase text-emerald-600 text-xs font-bold mb-2\"\n                  htmlFor=\"grid-password\"\n                >\n                  Client Name\n                </label>\n                <select \n                  v-model=\"state.clientid\"\n                  class=\"border-0 px-3 py-3 placeholder-emerald-300 text-emerald-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                >\n                  <option\n                    v-for=\"client in clients\" :key=\"client.clientID\"\n                    v-bind:value=\"client.clientID\"\n                  >\n                    {{client.clientID}} - {{ client.clientName }}\n                  </option>\n                </select>\n                <span v-if=\"v$.clientid.$error\" class=\"text-sm px-2 text-red-500\">{{v$.clientid.$errors[0].$message}}</span>\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"text-left block uppercase text-emerald-600 text-xs font-bold mb-2 mt-2\"\n                  htmlFor=\"grid-password\"\n                >\n                  Place Name\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"disabled border-0 px-3 py-3 placeholder-emerald-300 text-emerald-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                  placeholder=\"ID\"\n                  v-model=\"state.placename\"\n                  disabled\n                />\n                <span v-if=\"v$.placeid.$error\" class=\"text-sm px-2 text-red-500\">{{v$.placeid.$errors[0].$message}}</span>\n              </div>\n\n              <div class=\"text-center relative w-full mb-3\">\n                <label\n                  class=\"text-left block uppercase text-emerald-600 text-xs font-bold mb-2\"\n                  htmlFor=\"grid-password\"\n                >\n                  Order Check-In & Check-Out\n                </label>\n                <v-date-picker\n                  color=\"green\"\n                  v-model=\"state.range\"\n                  :min-date='new Date()'\n                  is-range\n                  is-expanded\n                  />\n                <span v-if=\"v$.range.$error\" class=\"text-sm px-2 text-red-500\">{{v$.range.$errors[0].$message}}</span>\n              </div>\n\n              <div class=\"relative w-full mb-3\">\n                <label\n                  class=\"text-left block uppercase text-emerald-600 text-xs font-bold mb-2\"\n                  htmlFor=\"grid-password\"\n                >\n                  Status\n                </label>\n                <select \n                  v-model=\"state.status\"\n                  placeholder=\"Select Owner\"\n                  class=\"border-0 px-3 py-3 placeholder-emerald-300 text-emerald-600 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full ease-linear transition-all duration-150\"\n                >\n                  <option\n                    v-for=\"stat in stats\" :key=\"stat\"\n                    v-bind:value=\"stat\"\n                  >\n                    {{stat}}\n                  </option>\n                </select>\n                <span v-if=\"v$.status.$error\" class=\"text-sm px-2 text-red-500\">{{v$.status.$errors[0].$message}}</span>\n              </div>\n\n              <div class=\"text-center mt-6\">\n                <footer class=\"modal-footer\">\n                <button\n                  @click=\"addOrder()\"\n                  class=\"bg-emerald-800 text-white active:bg-emerald-600 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full ease-linear transition-all duration-150\"\n                  type=\"button\"\n                >\n                  Order\n                </button>\n                </footer>\n              </div>\n            </form>\n        </section>\n      </div>\n    </div>\n  </transition>\n</template>\n<script>\nimport useValidate from '@vuelidate/core';\nimport { required } from '@vuelidate/validators';\nimport { reactive, computed } from 'vue';\nimport Swal from 'sweetalert2';\nimport axios from \"axios\";\nexport default {\n  setup(){\n    const state = reactive ({\n      id: \"\",\n      placeid: \"\",\n      clientid: \"\",\n      status: \"\",\n      range: {\n        start: \"\",\n        end: \"\",\n      },\n    })\n    const rules = computed(() => {\n      return {\n        range: {\n          start: { required },\n          end: { required },\n        },\n      }\n    })\n    const v$ = useValidate(rules,state)\n    return {\n      state,\n      v$,\n    }\n  },\n  data() {\n    return {\n      client:{},\n      place:{},\n    };\n  },\n  props: ['id'],\n  created() {\n    this.getOrder();\n    this.getClient();\n    this.getPlace();\n  },\n  methods: {\n    async addOrder() {\n      this.v$.$validate()\n      if (this.v$.$error) {\n        return\n      } \n      try {\n        await axios.post(\"http://localhost:5000/order\", {\n          orderID: Math.random().toString(36).substring(2),\n          clientID: this.state.clientid,\n          placeID: this.state.placeid,\n          orderDate: new Date(),\n          orderCheckIn: this.state.range.start,\n          orderCheckOut: this.state.range.end,\n          orderStatus: this.state.status\n        });\n        this.sAlert(\"success\",\"Yeay..\",\"Adding Order Success\");\n        this.close();\n      } catch (err) {\n        console.log(err);\n        this.sAlert(\"error\",\"Oops..\",\"Adding Order Failed\");\n      }\n    },\n    async getClient() {\n\n      try {\n        const response = await axios.get(\"http://localhost:5000/client\");\n        this.clients = response.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async getPlace() {\n      try {\n        const response = await axios.get('http://localhost:5000/place/'+this.id);\n        this.places = response.data;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    sAlert: function(ico, tit, txt) {\n      Swal.fire({\n        icon: ico,\n        title: tit,\n        text: txt,\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    close() {\n      this.$emit('close');\n      this.$router.go();\n    },\n  },\n};\n</script>\n<style>\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.3);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .modal {\n    background: #FFFFFF;\n    overflow-x: auto;\n    display: flex;\n    flex-direction: column;\n    border-radius: 5px;\n  }\n\n  .modal-header,\n  .modal-footer {\n    padding: 20px;\n    display: flex;\n  }\n\n  .modal-header {\n    position: relative;\n    border-bottom: 1px solid #eeeeee;\n    color: #4AAE9B;\n    justify-content: space-between;\n  }\n\n  .modal-footer {\n    border-top: 1px solid #eeeeee;\n    flex-direction: column;\n  }\n\n  .modal-body {\n    position: relative;\n    width: 500px;\n    padding: 20px 20px;\n  }\n\n  .btn-close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    border: none;\n    font-size: 20px;\n    padding: 20px 20px;\n    cursor: pointer;\n    font-weight: bold;\n    color: #4AAE9B;\n    background: transparent;\n  }\n\n  .modal-fade-enter,\n  .modal-fade-leave-to {\n    opacity: 0;\n  }\n\n  .modal-fade-enter-active,\n  .modal-fade-leave-active {\n    transition: opacity .5s ease;\n  }\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}