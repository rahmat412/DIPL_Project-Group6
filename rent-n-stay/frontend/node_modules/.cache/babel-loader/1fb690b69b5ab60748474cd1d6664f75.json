{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\"; // layouts\n\nimport Admin from \"@/layouts/Admin.vue\";\nimport Auth from \"@/layouts/Auth.vue\"; // views for Admin layout\n\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Settings from \"@/views/admin/Settings.vue\";\nimport Tables from \"@/views/admin/Tables.vue\";\nimport Maps from \"@/views/admin/Maps.vue\"; // views for Auth layout\n\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\"; // views without layouts\n\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\"; //coba\n\nimport Admin1 from \"@/layouts/admin_v.vue\";\nimport Client from \"@/views/admin_menu/ManageClient.vue\";\nimport Owner from \"@/views/admin_menu/ManageOwner.vue\";\nimport Place from \"@/views/admin_menu/ManagePlace.vue\";\nimport Address from \"@/views/admin_menu/ManageAddress.vue\";\nimport Facility from \"@/views/admin_menu/ManageFacility.vue\";\nimport Order from \"@/views/admin_menu/ManageOrder.vue\"; // routes\n\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/admin\",\n    redirect: \"/admin/dashboard\",\n    component: Admin,\n    children: [{\n      path: \"/admin/dashboard\",\n      component: Dashboard\n    }, {\n      path: \"/admin/settings\",\n      component: Settings\n    }, {\n      path: \"/admin/tables\",\n      component: Tables\n    }, {\n      path: \"/admin/maps\",\n      component: Maps\n    }],\n    meta: {\n      requiresAuth: true,\n      isAdmin: true\n    }\n  }, {\n    path: \"/admin1\",\n    redirect: \"/admin1/dashboard\",\n    component: Admin1,\n    children: [{\n      path: \"/admin1/client\",\n      component: Client\n    }, {\n      path: \"/admin1/owner\",\n      component: Settings\n    }, {\n      path: \"/admin1/place\",\n      component: Tables\n    }, {\n      path: \"/admin1/maps\",\n      component: Maps\n    }]\n  }, {\n    path: \"/auth\",\n    redirect: \"/auth/login\",\n    component: Auth,\n    children: [{\n      path: \"/auth/login\",\n      component: Login\n    }, {\n      path: \"/auth/register\",\n      component: Register\n    }],\n    meta: {\n      guest: true\n    }\n  }, {\n    path: \"/landing\",\n    component: Landing,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/temp\",\n    component: indexTemp\n  }, {\n    path: \"/profile\",\n    component: Profile,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/\",\n    component: Home\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (localStorage.getItem('jwt') == null) {\n      next({\n        path: '/auth/login',\n        params: {\n          nextUrl: to.fullPath\n        }\n      });\n    } else {\n      var role = JSON.parse(localStorage.getItem('role'));\n\n      if (to.matched.some(function (record) {\n        return record.meta.isAdmin;\n      })) {\n        if (role == 1) {\n          next();\n        } else {\n          if (to.matched.some(function (record) {\n            return record.meta.isOwner;\n          })) {\n            if (role == 2) {\n              next();\n            } else {\n              if (role == 3) {\n                next();\n              } else {\n                next({\n                  component: Home\n                });\n              }\n            }\n          }\n        }\n      } else {\n        next();\n      }\n    }\n  } else if (to.matched.some(function (record) {\n    return record.meta.guest;\n  })) {\n    if (localStorage.getItem('jwt') == null) {\n      next();\n    } else {\n      next({\n        component: Home\n      });\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"sources":["D:/Project/temp_rns/frontend/src/routes/routes.js"],"names":["createWebHistory","createRouter","Admin","Auth","Dashboard","Settings","Tables","Maps","Login","Register","Landing","Profile","Home","indexTemp","Admin1","Client","Owner","Place","Address","Facility","Order","router","history","routes","path","redirect","component","children","meta","requiresAuth","isAdmin","guest","beforeEach","to","from","next","matched","some","record","localStorage","getItem","params","nextUrl","fullPath","role","JSON","parse","isOwner"],"mappings":"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","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\n\n// layouts\nimport Admin from \"@/layouts/Admin.vue\";\nimport Auth from \"@/layouts/Auth.vue\";\n\n// views for Admin layout\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Settings from \"@/views/admin/Settings.vue\";\nimport Tables from \"@/views/admin/Tables.vue\";\nimport Maps from \"@/views/admin/Maps.vue\";\n\n// views for Auth layout\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\";\n\n// views without layouts\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\n\n//coba\nimport Admin1 from \"@/layouts/admin_v.vue\";\nimport Client from \"@/views/admin_menu/ManageClient.vue\";\nimport Owner from \"@/views/admin_menu/ManageOwner.vue\";\nimport Place from \"@/views/admin_menu/ManagePlace.vue\";\nimport Address from \"@/views/admin_menu/ManageAddress.vue\";\nimport Facility from \"@/views/admin_menu/ManageFacility.vue\";\nimport Order from \"@/views/admin_menu/ManageOrder.vue\";\n\n// routes\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: [{\n        path: \"/admin\",\n        redirect: \"/admin/dashboard\",\n        component: Admin,\n        children: [{\n                path: \"/admin/dashboard\",\n                component: Dashboard,\n            },\n            {\n                path: \"/admin/settings\",\n                component: Settings,\n            },\n            {\n                path: \"/admin/tables\",\n                component: Tables,\n            },\n            {\n                path: \"/admin/maps\",\n                component: Maps,\n            },\n        ],\n        meta: {\n            requiresAuth: true,\n            isAdmin: true,\n        }\n    }, {\n        path: \"/admin1\",\n        redirect: \"/admin1/dashboard\",\n        component: Admin1,\n        children: [{\n                path: \"/admin1/client\",\n                component: Client,\n            },\n            {\n                path: \"/admin1/owner\",\n                component: Settings,\n            },\n            {\n                path: \"/admin1/place\",\n                component: Tables,\n            },\n            {\n                path: \"/admin1/maps\",\n                component: Maps,\n            },\n        ],\n    }, {\n        path: \"/auth\",\n        redirect: \"/auth/login\",\n        component: Auth,\n        children: [{\n                path: \"/auth/login\",\n                component: Login,\n            },\n            {\n                path: \"/auth/register\",\n                component: Register,\n            },\n        ],\n        meta: {\n            guest: true,\n        }\n    }, {\n        path: \"/landing\",\n        component: Landing,\n        meta: {\n            requiresAuth: true,\n        }\n    }, {\n        path: \"/temp\",\n        component: indexTemp,\n    }, {\n        path: \"/profile\",\n        component: Profile,\n        meta: {\n            requiresAuth: true,\n        }\n    }, {\n        path: \"/\",\n        component: Home,\n    }]\n});\n\nrouter.beforeEach((to, from, next) => {\n    if (to.matched.some(record => record.meta.requiresAuth)) {\n        if (localStorage.getItem('jwt') == null) {\n            next({\n                path: '/auth/login',\n                params: { nextUrl: to.fullPath }\n            })\n        } else {\n            let role = JSON.parse(localStorage.getItem('role'))\n            if (to.matched.some(record => record.meta.isAdmin)) {\n                if (role == 1) {\n                    next()\n                } else {\n                    if (to.matched.some(record => record.meta.isOwner)) {\n                        if (role == 2) {\n                            next()\n                        } else {\n                            if (role == 3) {\n                                next()\n                            } else {\n                                next({ component: Home })\n                            }\n                        }\n                    }\n                }\n            } else {\n                next()\n            }\n        }\n    } else if (to.matched.some(record => record.meta.guest)) {\n        if (localStorage.getItem('jwt') == null) {\n            next()\n        } else {\n            next({\n                component: Home\n            })\n        }\n    } else {\n        next()\n    }\n})\n\nexport default router;"]},"metadata":{},"sourceType":"module"}