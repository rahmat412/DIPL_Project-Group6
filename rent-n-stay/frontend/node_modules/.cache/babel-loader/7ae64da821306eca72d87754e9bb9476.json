{"ast":null,"code":"import { createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"rounded-t mb-0 px-4 py-3 bg-transparent\\\"><div class=\\\"flex flex-wrap items-center\\\"><div class=\\\"relative w-full max-w-full flex-grow flex-1\\\"><h6 class=\\\"uppercase text-blueGray-400 mb-1 text-xs font-semibold\\\"> Performance </h6><h2 class=\\\"text-blueGray-700 text-xl font-semibold\\\"> Total orders </h2></div></div></div><div class=\\\"p-4 flex-auto\\\"><div class=\\\"relative h-350-px\\\"><canvas id=\\\"bar-chart\\\"></canvas></div></div>\", 2);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_hoisted_2]);\n}","map":{"version":3,"sources":["D:\\Project\\DIPL_Project-Group6\\rent-n-stay\\src\\components\\Cards\\CardBarChart.vue"],"names":[],"mappings":";;AAEI,EAAA,KAAK,EAAC;;;;;;uBADR,YAAA,CAoBM,KApBN,EAAA,UAAA,EAoBM,CAjBJ,UAiBI,CApBN,C","sourcesContent":["<template>\n  <div\n    class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\"\n  >\n    <div class=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n      <div class=\"flex flex-wrap items-center\">\n        <div class=\"relative w-full max-w-full flex-grow flex-1\">\n          <h6 class=\"uppercase text-blueGray-400 mb-1 text-xs font-semibold\">\n            Performance\n          </h6>\n          <h2 class=\"text-blueGray-700 text-xl font-semibold\">\n            Total orders\n          </h2>\n        </div>\n      </div>\n    </div>\n    <div class=\"p-4 flex-auto\">\n      <div class=\"relative h-350-px\">\n        <canvas id=\"bar-chart\"></canvas>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Chart from \"chart.js\";\nexport default {\n  mounted: function () {\n    this.$nextTick(function () {\n      let config = {\n        type: \"bar\",\n        data: {\n          labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n          ],\n          datasets: [\n            {\n              label: new Date().getFullYear(),\n              backgroundColor: \"#ed64a6\",\n              borderColor: \"#ed64a6\",\n              data: [30, 78, 56, 34, 100, 45, 13],\n              fill: false,\n              barThickness: 8,\n            },\n            {\n              label: new Date().getFullYear() - 1,\n              fill: false,\n              backgroundColor: \"#4c51bf\",\n              borderColor: \"#4c51bf\",\n              data: [27, 68, 86, 74, 10, 4, 87],\n              barThickness: 8,\n            },\n          ],\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: false,\n            text: \"Orders Chart\",\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false,\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true,\n          },\n          legend: {\n            labels: {\n              fontColor: \"rgba(0,0,0,.4)\",\n            },\n            align: \"end\",\n            position: \"bottom\",\n          },\n          scales: {\n            xAxes: [\n              {\n                display: false,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Month\",\n                },\n                gridLines: {\n                  borderDash: [2],\n                  borderDashOffset: [2],\n                  color: \"rgba(33, 37, 41, 0.3)\",\n                  zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\n                  zeroLineBorderDash: [2],\n                  zeroLineBorderDashOffset: [2],\n                },\n              },\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Value\",\n                },\n                gridLines: {\n                  borderDash: [2],\n                  drawBorder: false,\n                  borderDashOffset: [2],\n                  color: \"rgba(33, 37, 41, 0.2)\",\n                  zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\n                  zeroLineBorderDash: [2],\n                  zeroLineBorderDashOffset: [2],\n                },\n              },\n            ],\n          },\n        },\n      };\n      let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n      window.myBar = new Chart(ctx, config);\n    });\n  },\n};\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}