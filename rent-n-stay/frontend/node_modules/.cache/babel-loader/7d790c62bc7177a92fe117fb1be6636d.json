{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\"; // import mainnavbar from \"@/components/Navbars/IndexNavbar.vue\";\n// layouts\n\nimport Admin from \"@/layouts/Admin.vue\";\nimport Auth from \"@/layouts/Auth.vue\";\nimport Main from \"@/layouts/Main.vue\"; // views for Admin layout\n\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Settings from \"@/views/admin/Settings.vue\";\nimport Tables from \"@/views/admin/Tables.vue\";\nimport Maps from \"@/views/admin/Maps.vue\"; // views for Auth layout\n\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\"; // views without layouts\n\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\nimport myProfile from \"@/views/myProfile.vue\"; // routes\n\nvar routes = [{\n  path: \"/admin\",\n  redirect: \"/admin/dashboard\",\n  component: Admin,\n  children: [{\n    path: \"/admin/dashboard\",\n    component: Dashboard\n  }, {\n    path: \"/admin/settings\",\n    component: Settings\n  }, {\n    path: \"/admin/tables\",\n    component: Tables\n  }, {\n    path: \"/admin/maps\",\n    component: Maps\n  }],\n  meta: {\n    requiresAuth: true,\n    role: true\n  }\n}, {\n  path: \"/auth\",\n  redirect: \"/auth/login\",\n  component: Auth,\n  children: [{\n    path: \"/auth/login\",\n    component: Login\n  }, {\n    path: \"/auth/register\",\n    component: Register\n  }],\n  meta: {\n    guest: true\n  }\n}, {\n  path: \"/landing\",\n  component: Landing\n}, {\n  path: \"/profile\",\n  component: Profile\n}, {\n  path: \"/temp\",\n  component: indexTemp\n}, {\n  path: \"/myprofile\",\n  component: myProfile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: \"/home\",\n  redirect: \"/home/Index\",\n  component: Main,\n  children: [{\n    path: \"/Index\",\n    component: Home\n  }, {\n    path: \"/home/register\",\n    component: Register\n  }],\n  meta: {\n    guest: true\n  }\n}, {\n  path: \"/:pathMatch(.*)*\",\n  redirect: \"/\"\n}];\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    if (localStorage.getItem('jwt') == null) {\n      next({\n        path: '/auth/login',\n        params: {\n          nextUrl: to.fullPath\n        }\n      });\n    } else {\n      var user = JSON.parse(localStorage.getItem('user'));\n\n      if (to.matched.some(function (record) {\n        return record.meta.role;\n      })) {\n        if (user.role == 1) {\n          next({\n            component: Admin\n          });\n        } else {\n          next({\n            component: Home\n          });\n        }\n      } else {\n        next();\n      }\n    }\n  } else if (to.matched.some(function (record) {\n    return record.meta.guest;\n  })) {\n    if (localStorage.getItem('jwt') == null) {\n      next();\n    } else {\n      next({\n        component: Home\n      });\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"sources":["D:/Project/temp_rns/frontend/src/routes/routes.js"],"names":["createWebHistory","createRouter","Admin","Auth","Main","Dashboard","Settings","Tables","Maps","Login","Register","Landing","Profile","Home","indexTemp","myProfile","routes","path","redirect","component","children","meta","requiresAuth","role","guest","router","history","beforeEach","to","from","next","matched","some","record","localStorage","getItem","params","nextUrl","fullPath","user","JSON","parse"],"mappings":"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","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\n\n// import mainnavbar from \"@/components/Navbars/IndexNavbar.vue\";\n\n// layouts\nimport Admin from \"@/layouts/Admin.vue\";\nimport Auth from \"@/layouts/Auth.vue\";\nimport Main from \"@/layouts/Main.vue\";\n\n// views for Admin layout\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport Settings from \"@/views/admin/Settings.vue\";\nimport Tables from \"@/views/admin/Tables.vue\";\nimport Maps from \"@/views/admin/Maps.vue\";\n\n// views for Auth layout\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\";\n\n// views without layouts\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\nimport myProfile from \"@/views/myProfile.vue\";\n\n// routes\n\nconst routes = [{\n        path: \"/admin\",\n        redirect: \"/admin/dashboard\",\n        component: Admin,\n        children: [{\n                path: \"/admin/dashboard\",\n                component: Dashboard,\n            },\n            {\n                path: \"/admin/settings\",\n                component: Settings,\n            },\n            {\n                path: \"/admin/tables\",\n                component: Tables,\n            },\n            {\n                path: \"/admin/maps\",\n                component: Maps,\n            },\n        ],\n        meta: {\n            requiresAuth: true,\n            role: true\n        }\n    },\n    {\n        path: \"/auth\",\n        redirect: \"/auth/login\",\n        component: Auth,\n        children: [{\n                path: \"/auth/login\",\n                component: Login,\n            },\n            {\n                path: \"/auth/register\",\n                component: Register,\n            },\n        ],\n        meta: {\n            guest: true\n        }\n    },\n    {\n        path: \"/landing\",\n        component: Landing,\n    },\n    {\n        path: \"/profile\",\n        component: Profile,\n    },\n    {\n        path: \"/temp\",\n        component: indexTemp,\n    },\n    {\n        path: \"/myprofile\",\n        component: myProfile,\n        meta: {\n            requiresAuth: true,\n        }\n    },\n    {\n        path: \"/home\",\n        redirect: \"/home/Index\",\n        component: Main,\n        children: [{\n                path: \"/Index\",\n                component: Home,\n            },\n            {\n                path: \"/home/register\",\n                component: Register,\n            },\n        ],\n        meta: {\n            guest: true\n        }\n    },\n    { path: \"/:pathMatch(.*)*\", redirect: \"/\" },\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n    if (to.matched.some(record => record.meta.requiresAuth)) {\n        if (localStorage.getItem('jwt') == null) {\n            next({\n                path: '/auth/login',\n                params: { nextUrl: to.fullPath }\n            })\n        } else {\n            let user = JSON.parse(localStorage.getItem('user'))\n            if (to.matched.some(record => record.meta.role)) {\n                if (user.role == 1) {\n                    next({ component: Admin })\n                } else {\n                    next({\n                        component: Home\n                    })\n                }\n            } else {\n                next()\n            }\n        }\n    } else if (to.matched.some(record => record.meta.guest)) {\n        if (localStorage.getItem('jwt') == null) {\n            next()\n        } else {\n            next({\n                component: Home\n            })\n        }\n    } else {\n        next()\n    }\n})\n\nexport default router;"]},"metadata":{},"sourceType":"module"}