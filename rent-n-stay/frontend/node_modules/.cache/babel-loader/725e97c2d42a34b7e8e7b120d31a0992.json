{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\"; // layouts\n\nimport Admin1 from \"@/layouts/Admin_v.vue\";\nimport Auth from \"@/layouts/Auth.vue\"; // views for Admin layout\n\nimport Dashboard1 from \"@/views/admin_/Dashboard.vue\";\nimport Settings from \"@/views/admin_/Settings.vue\";\nimport Tables from \"@/views/admin_/Tables.vue\";\nimport Maps from \"@/views/admin_/Maps.vue\"; // views for Auth layout\n\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\"; // views without layouts\n\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport SearchPlace from \"@/views/SearchPlace.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\nimport alert from \"@/views/alert.vue\"; // admin menu\n\nimport Admin from \"@/layouts/Admin.vue\";\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport M_Admin from \"@/views/admin/ManageAdmin.vue\";\nimport Client from \"@/views/admin/ManageClient.vue\";\nimport Owner from \"@/views/admin/ManageOwner.vue\";\nimport Place from \"@/views/admin/ManagePlace.vue\";\nimport Address from \"@/views/admin/ManageAddress.vue\";\nimport Facility from \"@/views/admin/ManageFacility.vue\";\nimport Order from \"@/views/admin/ManageOrder.vue\"; // routes\n\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: \"/admin1\",\n    redirect: \"/admin1/dashboard\",\n    component: Admin1,\n    beforeEnter: requireAuth,\n    children: [{\n      path: \"/admin1/dashboard\",\n      component: Dashboard1\n    }, {\n      path: \"/admin1/settings\",\n      component: Settings\n    }, {\n      path: \"/admin1/tables\",\n      component: Tables\n    }, {\n      path: \"/admin1/maps\",\n      component: Maps\n    }]\n  }, {\n    path: \"/admin\",\n    redirect: \"/admin/dashboard\",\n    component: Admin,\n    beforeEnter: requireAuth,\n    meta: {\n      roles: 'admin'\n    },\n    children: [{\n      path: \"/admin/dashboard\",\n      component: Dashboard\n    }, {\n      path: \"/admin/admin\",\n      component: M_Admin,\n      meta: {\n        roles: 'super-admin'\n      }\n    }, {\n      path: \"/admin/client\",\n      component: Client\n    }, {\n      path: \"/admin/owner\",\n      component: Owner\n    }, {\n      path: \"/admin/place\",\n      component: Place\n    }, {\n      path: \"/admin/address\",\n      component: Address\n    }, {\n      path: \"/admin/facility\",\n      component: Facility\n    }, {\n      path: \"/admin/Order\",\n      component: Order\n    }]\n  }, {\n    path: \"/auth\",\n    redirect: \"/auth/login\",\n    component: Auth,\n    children: [{\n      path: \"/auth/login\",\n      component: Login\n    }, {\n      path: \"/auth/register\",\n      component: Register\n    }]\n  }, {\n    path: \"/landing\",\n    component: Landing,\n    beforeEnter: requireAuth,\n    meta: {\n      roles: 'owner'\n    }\n  }, {\n    path: \"/temp\",\n    component: indexTemp\n  }, {\n    path: \"/places\",\n    component: SearchPlace\n  }, {\n    path: \"/profile\",\n    component: Profile,\n    beforeEnter: requireAuth,\n    meta: {\n      roles: 'client'\n    }\n  }, {\n    path: \"/alert\",\n    component: alert\n  }, {\n    path: \"/\",\n    component: Home\n  }, {\n    path: \"/:pathMatch(.*)*\",\n    redirect: \"/\"\n  }]\n});\n\nfunction requireAuth(to, from, next) {\n  function proceed() {\n    if (localStorage.getItem('role') != null) {\n      switch (to.meta.roles) {\n        case 'client':\n          next();\n          break;\n\n        case 'owner':\n          if (localStorage.getItem('role') <= 2) {\n            next();\n          } else {\n            next({\n              component: Home\n            });\n          }\n\n          break;\n\n        case 'admin':\n          if (localStorage.getItem('role') <= 1) {\n            next();\n          } else {\n            next({\n              component: alert\n            });\n          }\n\n          break;\n\n        case 'super-admin':\n          if (localStorage.getItem('role') <= 0) {\n            next();\n          } else {\n            next({\n              component: alert\n            });\n          }\n\n          break;\n\n        default:\n          next({\n            component: alert\n          });\n          break;\n      }\n    } else {\n      next({\n        component: alert\n      });\n    }\n  }\n\n  if (localStorage.getItem('jwt') == null) {\n    next({\n      path: '/auth/login'\n    });\n  } else {\n    proceed();\n  }\n}\n\nexport default router;","map":{"version":3,"sources":["D:/Project/temp_rns/frontend/src/routes/routes.js"],"names":["createWebHistory","createRouter","Admin1","Auth","Dashboard1","Settings","Tables","Maps","Login","Register","Landing","Profile","SearchPlace","Home","indexTemp","alert","Admin","Dashboard","M_Admin","Client","Owner","Place","Address","Facility","Order","router","history","routes","path","redirect","component","beforeEnter","requireAuth","children","meta","roles","to","from","next","proceed","localStorage","getItem"],"mappings":"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","sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\n\n// layouts\nimport Admin1 from \"@/layouts/Admin_v.vue\";\nimport Auth from \"@/layouts/Auth.vue\";\n\n// views for Admin layout\nimport Dashboard1 from \"@/views/admin_/Dashboard.vue\";\nimport Settings from \"@/views/admin_/Settings.vue\";\nimport Tables from \"@/views/admin_/Tables.vue\";\nimport Maps from \"@/views/admin_/Maps.vue\";\n\n// views for Auth layout\nimport Login from \"@/views/auth/Login.vue\";\nimport Register from \"@/views/auth/Register.vue\";\n\n// views without layouts\nimport Landing from \"@/views/Landing.vue\";\nimport Profile from \"@/views/Profile.vue\";\nimport SearchPlace from \"@/views/SearchPlace.vue\";\nimport Home from \"@/views/Index.vue\";\nimport indexTemp from \"@/views/Index_temp.vue\";\nimport alert from \"@/views/alert.vue\";\n\n// admin menu\nimport Admin from \"@/layouts/Admin.vue\";\nimport Dashboard from \"@/views/admin/Dashboard.vue\";\nimport M_Admin from \"@/views/admin/ManageAdmin.vue\";\nimport Client from \"@/views/admin/ManageClient.vue\";\nimport Owner from \"@/views/admin/ManageOwner.vue\";\nimport Place from \"@/views/admin/ManagePlace.vue\";\nimport Address from \"@/views/admin/ManageAddress.vue\";\nimport Facility from \"@/views/admin/ManageFacility.vue\";\nimport Order from \"@/views/admin/ManageOrder.vue\";\n\n// routes\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: [{\n            path: \"/admin1\",\n            redirect: \"/admin1/dashboard\",\n            component: Admin1,\n            beforeEnter: requireAuth,\n            children: [{\n                    path: \"/admin1/dashboard\",\n                    component: Dashboard1,\n                },\n                {\n                    path: \"/admin1/settings\",\n                    component: Settings,\n                },\n                {\n                    path: \"/admin1/tables\",\n                    component: Tables,\n                },\n                {\n                    path: \"/admin1/maps\",\n                    component: Maps,\n                },\n            ],\n        }, {\n            path: \"/admin\",\n            redirect: \"/admin/dashboard\",\n            component: Admin,\n            beforeEnter: requireAuth,\n            meta: {\n                roles: 'admin'\n            },\n            children: [{\n                    path: \"/admin/dashboard\",\n                    component: Dashboard,\n                }, {\n                    path: \"/admin/admin\",\n                    component: M_Admin,\n                    meta: {\n                        roles: 'super-admin'\n                    },\n                }, {\n                    path: \"/admin/client\",\n                    component: Client,\n                },\n                {\n                    path: \"/admin/owner\",\n                    component: Owner,\n                },\n                {\n                    path: \"/admin/place\",\n                    component: Place,\n                },\n                {\n                    path: \"/admin/address\",\n                    component: Address,\n                },\n                {\n                    path: \"/admin/facility\",\n                    component: Facility,\n                },\n                {\n                    path: \"/admin/Order\",\n                    component: Order,\n                },\n            ],\n\n        }, {\n            path: \"/auth\",\n            redirect: \"/auth/login\",\n            component: Auth,\n            children: [{\n                    path: \"/auth/login\",\n                    component: Login,\n                },\n                {\n                    path: \"/auth/register\",\n                    component: Register,\n                },\n            ],\n        }, {\n            path: \"/landing\",\n            component: Landing,\n            beforeEnter: requireAuth,\n            meta: {\n                roles: 'owner'\n            }\n        }, {\n            path: \"/temp\",\n            component: indexTemp,\n        }, {\n            path: \"/places\",\n            component: SearchPlace,\n        }, {\n            path: \"/profile\",\n            component: Profile,\n            beforeEnter: requireAuth,\n            meta: {\n                roles: 'client'\n            }\n        }, {\n            path: \"/alert\",\n            component: alert,\n        }, {\n            path: \"/\",\n            component: Home,\n        },\n        { path: \"/:pathMatch(.*)*\", redirect: \"/\" },\n    ]\n});\n\nfunction requireAuth(to, from, next) {\n    function proceed() {\n        if (localStorage.getItem('role') != null) {\n            switch (to.meta.roles) {\n                case 'client':\n                    next();\n                    break;\n                case 'owner':\n                    if (localStorage.getItem('role') <= 2) {\n                        next();\n                    } else {\n                        next({ component: Home });\n                    }\n                    break;\n                case 'admin':\n                    if (localStorage.getItem('role') <= 1) {\n                        next();\n                    } else {\n                        next({ component: alert });\n                    }\n                    break;\n                case 'super-admin':\n                    if (localStorage.getItem('role') <= 0) {\n                        next();\n                    } else {\n                        next({ component: alert });\n                    }\n                    break;\n                default:\n                    next({ component: alert });\n                    break;\n            }\n        } else {\n            next({ component: alert });\n        }\n    }\n    if (localStorage.getItem('jwt') == null) {\n        next({ path: '/auth/login' })\n    } else {\n        proceed();\n    }\n}\n\nexport default router;"]},"metadata":{},"sourceType":"module"}